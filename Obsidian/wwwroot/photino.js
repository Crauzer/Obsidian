var R = Object.defineProperty; var z = (t, r, l) => r in t ? R(t, r, { enumerable: !0, configurable: !0, writable: !0, value: l }) : t[r] = l; var h = (t, r, l) => (z(t, typeof r != "symbol" ? r + "" : r, l), l); (function (t, r) { typeof exports == "object" && typeof module != "undefined" ? r(exports) : typeof define == "function" && define.amd ? define(["exports"], r) : (t = typeof globalThis != "undefined" ? globalThis : t || self, r(t.PhotinoAPI = {})) })(this, function (t) { "use strict"; function r() { let n = new Date().getTime(); return "xxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, s => { const i = (n + Math.random() * 16) % 16 | 0; return n = Math.floor(n / 16), (s == "x" ? i : i & 3 | 8).toString(16) }) } class l { constructor(e) { h(this, "id"); h(this, "data"); this.id = r(), this.data = e } } class o { send(e, ...s) { return t.Photino.send(this.name, e, ...s) } } class x extends o { constructor() { super(...arguments); h(this, "name", "app") } exit(e) { return this.send(this.exit.name, e) } cwd() { return this.send(this.cwd.name) } } class f extends o { constructor() { super(...arguments); h(this, "name", "io") } readFile(e) { return this.send(this.readFile.name, e) } readFileText(e, s = null) { return this.send(this.readFileText.name, e, s) } readFileLines(e, s = null) { return this.send(this.readFileLines.name, e, s) } writeFile(e, s) { return this.send(this.writeFile.name, e, s) } writeFileText(e, s, i = null) { return this.send(this.writeFileText.name, e, s, i) } writeFileLines(e, s, i = null) { return this.send(this.writeFileLines.name, e, s, i) } listFiles(e, s = null, i = !1) { return this.send(this.listFiles.name, e, s, i) } listFolders(e, s = null, i = !1) { return this.send(this.listFolders.name, e, s, i) } createFolder(e) { return this.send(this.createFolder.name, e) } deleteFile(e) { return this.send(this.deleteFile.name, e) } deleteFolder(e, s = !1) { return this.send(this.deleteFolder.name, e, s) } fileExists(e) { return this.send(this.fileExists.name, e) } folderExists(e) { return this.send(this.folderExists.name, e) } resolvePath(e) { return this.send(this.resolvePath.name, e) } getExtension(e) { return this.send(this.getExtension.name, e) } } class M extends o { constructor() { super(...arguments); h(this, "name", "osModule") } isWindows() { return this.send(this.isWindows.name) } isLinux() { return this.send(this.isLinux.name) } isMacOs() { return this.send(this.isMacOs.name) } getEnvar(e) { return this.send(this.getEnvar.name, e) } cmd(e) { return this.send(this.cmd.name, e) } } class T extends o { constructor() { super(...arguments); h(this, "name", "window") } getTitle() { return this.send(this.getTitle.name) } getMaximized() { return this.send(this.getMaximized.name) } getMinimized() { return this.send(this.getMinimized.name) } getDevToolsEnabled() { return this.send(this.getDevToolsEnabled.name) } getContextMenuEnabled() { return this.send(this.getContextMenuEnabled.name) } getTopMost() { return this.send(this.getTopMost.name) } getChromeless() { return this.send(this.getChromeless.name) } getFullScreen() { return this.send(this.getFullScreen.name) } getResizable() { return this.send(this.getResizable.name) } getWidth() { return this.send(this.getWidth.name) } getHeight() { return this.send(this.getHeight.name) } getTop() { return this.send(this.getTop.name) } getLeft() { return this.send(this.getLeft.name) } setTitle(e) { return this.send(this.setTitle.name, e) } setMaximized(e) { return this.send(this.setMaximized.name, e) } setMinimized(e) { return this.send(this.setMinimized.name, e) } setDevToolsEnabled(e) { return this.send(this.setDevToolsEnabled.name, e) } setContextMenuEnabled(e) { return this.send(this.setContextMenuEnabled.name, e) } setTopMost(e) { return this.send(this.setTopMost.name, e) } setChromeless(e) { return this.send(this.setChromeless.name, e) } setFullScreen(e) { return this.send(this.setFullScreen.name, e) } setResizable(e) { return this.send(this.setResizable.name, e) } setWidth(e) { return this.send(this.setWidth.name, e) } setHeight(e) { return this.send(this.setHeight.name, e) } setTop(e) { return this.send(this.setTop.name, e) } setLeft(e) { return this.send(this.setLeft.name, e) } close() { return this.send(this.close.name) } load(e) { return this.send(this.load.name, e) } loadRawString(e) { return this.send(this.loadRawString.name, e) } center() { return this.send(this.center.name) } hitTest(e) { t.Photino.sendRaw(`ht:${e}`) } drag() { t.Photino.sendRaw("ht:drag") } resizeTopLeft() { t.Photino.sendRaw("ht:nw") } resizeTop() { t.Photino.sendRaw("ht:n") } resizeTopRight() { t.Photino.sendRaw("ht:ne") } resizeRight() { t.Photino.sendRaw("ht:e") } resizeBottomRight() { t.Photino.sendRaw("ht:se") } resizeBottom() { t.Photino.sendRaw("ht:s") } resizeBottomLeft() { t.Photino.sendRaw("ht:sw") } resizeLeft() { t.Photino.sendRaw("ht:w") } } class F extends o { constructor() { super(); h(this, "listeners"); h(this, "name", "events"); this.listeners = {}, window.external.receiveMessage(e => { if (!e.startsWith("ev:")) return; let s, i; if (e.includes("|")) { const d = e.split("|"); s = d[0].split(":")[1]; let a; d[1].includes(",") ? a = d[1].split(",").map(m => m.split("=")) : a = [d[1].split("=")], i = Object.fromEntries(a) } else s = e.split(":")[1]; if (!!s && !!this.listeners[s]) for (const d of this.listeners[s]) d(i) }) } on(e, s) { this.listeners[e] || (this.listeners[e] = []), t.Photino.sendRaw(`ev:${e}`), this.listeners[e].push(s) } reset() { this.listeners = {}, t.Photino.sendRaw("ev:reset") } } const c = window; t.Photino = void 0, function (n) { n.app = new x, n.io = new f, n.os = new M, n.window = new T, n.events = new F; async function e(d, a, ...m) { const u = await s({ module: d, method: a, parameters: m }); if (u.error) throw new Error(u.error); return u.result } n.send = e; function s(d) { var a = new l(d); return c.external.sendMessage(`api:${JSON.stringify(a)}`), new Promise(m => { const w = setTimeout(() => { throw new Error("Request timed out") }, 1e4); c.external.receiveMessage(u => { if (!u.startsWith("api:")) return; const g = JSON.parse(u.substring(4)); g.id === a.id && (clearTimeout(w), m(g.data)) }) }) } async function i(d) { c.external.sendMessage(d) } n.sendRaw = i }(t.Photino || (t.Photino = {})), t.PhotinoModule = o, Object.defineProperty(t, "__esModule", { value: !0 }), t[Symbol.toStringTag] = "Module" });
